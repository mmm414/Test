<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.md.mapper.UserMapper">

    <resultMap type="User" id="UserResult">
        <result property="userId"    column="user_id"    />
        <result property="userPassword"    column="user_password"    />
        <result property="userName"    column="user_name"    />
        <result property="gitPassword"    column="git_password"    />
        <result property="gitName"    column="git_name"    />
        <result property="gitAddreddId"    column="git_addredd_id"    />
        <result property="sshId"    column="ssh_id"    />
    </resultMap>

    <sql id="selectUserVo">
        select user_id, user_password, user_name, git_password, git_name, git_addredd_id, ssh_id from user
    </sql>

    <select id="selectUserList" parameterType="User" resultMap="UserResult">
        <include refid="selectUserVo"/>
        <where>
            <if test="userPassword != null  and userPassword != ''"> and user_password = #{userPassword}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="gitPassword != null  and gitPassword != ''"> and git_password = #{gitPassword}</if>
            <if test="gitName != null  and gitName != ''"> and git_name like concat('%', #{gitName}, '%')</if>
            <if test="gitAddreddId != null "> and git_addredd_id = #{gitAddreddId}</if>
            <if test="sshId != null "> and ssh_id = #{sshId}</if>
        </where>
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where user_id = #{userId}
    </select>

    <insert id="insertUser" parameterType="User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="userPassword != null">user_password,</if>
            <if test="userName != null">user_name,</if>
            <if test="gitPassword != null">git_password,</if>
            <if test="gitName != null">git_name,</if>
            <if test="gitAddreddId != null">git_addredd_id,</if>
            <if test="sshId != null">ssh_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="userPassword != null">#{userPassword},</if>
            <if test="userName != null">#{userName},</if>
            <if test="gitPassword != null">#{gitPassword},</if>
            <if test="gitName != null">#{gitName},</if>
            <if test="gitAddreddId != null">#{gitAddreddId},</if>
            <if test="sshId != null">#{sshId},</if>
        </trim>
    </insert>

    <update id="updateUser" parameterType="User">
        update user
        <trim prefix="SET" suffixOverrides=",">
            <if test="userPassword != null">user_password = #{userPassword},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="gitPassword != null">git_password = #{gitPassword},</if>
            <if test="gitName != null">git_name = #{gitName},</if>
            <if test="gitAddreddId != null">git_addredd_id = #{gitAddreddId},</if>
            <if test="sshId != null">ssh_id = #{sshId},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteUserById" parameterType="Long">
        delete from user where user_id = #{userId}
    </delete>

    <delete id="deleteUserByIds" parameterType="String">
        delete from user where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>